<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mavericks on My Thoughts</title>
    <link>http://localhost:1313/tags/mavericks/</link>
    <description>Recent content in Mavericks on My Thoughts</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Eric Hemmeter</copyright>
    <lastBuildDate>Fri, 16 May 2014 18:31:20 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/mavericks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unhide /Users in 10.9.3</title>
      <link>http://localhost:1313/posts/unhide-users-in-10-9-3/</link>
      <pubDate>Fri, 16 May 2014 18:31:20 +0000</pubDate>
      <guid>http://localhost:1313/posts/unhide-users-in-10-9-3/</guid>
      <description>&lt;p&gt;[Further Edit] The below was fixed by Apple.  This is no longer necessary, but I&amp;rsquo;ll leave it here incase the ideas help someone. [/Further Edit] [Edit] So the below doesn&amp;rsquo;t actually work. Something changes the permissions and hidden flag after my launch daemon runs. I added a check of the files (just ls &amp;gt; to a file) and they get set correctly but by the time I am logged in something has changed it back. [/edit] The recent 10.9.3 update has made a strange change for a number of OS X users.  The directory that holds everyone&amp;rsquo;s home folder, /Users, has been hidden along with the /Users/Shared folder. A number of people have found a solution using chflags as follows: [code language=&amp;ldquo;bash&amp;rdquo;]sudo chflags nohidden /Users sudo chflags nohidden /Users/Shared[/code] But this doesn&amp;rsquo;t last through a reboot. Not as widely reported, there has also been a permissions change to /Users making it writable by the wheel group and everyone. I have seen an Applescript used as a login item to change the settings back, but this runs every time a user logs in, when the process only needs to run after each reboot.  So I put together another option that uses a launch daemon and a shell script. The shell script is: [code language=&amp;ldquo;bash&amp;rdquo;]#!/bin/sh chmod 755 /Users chflags nohidden /Users chflags nohidden /Users/Shared[/code] This should get saved in /Library/Scripts/fixUsersFolder.sh and then made executable. Then the launchd plist is: [code language=&amp;ldquo;xml&amp;rdquo;]&amp;amp;amp;lt;?xml version=&amp;amp;amp;quot;1.0&amp;amp;amp;quot; encoding=&amp;amp;amp;quot;UTF-8&amp;amp;amp;quot;?&amp;amp;amp;gt; &amp;amp;amp;lt;!DOCTYPE plist PUBLIC &amp;amp;amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;amp;amp;quot; &amp;amp;amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;amp;amp;quot;&amp;amp;amp;gt; &amp;amp;amp;lt;plist version=&amp;amp;amp;quot;1.0&amp;amp;amp;quot;&amp;amp;amp;gt; &amp;amp;amp;lt;dict&amp;amp;amp;gt; &amp;amp;amp;lt;key&amp;amp;amp;gt;Label&amp;amp;amp;lt;/key&amp;amp;amp;gt; &amp;amp;amp;lt;string&amp;amp;amp;gt;com.sneakypockets.fixHidden&amp;amp;amp;lt;/string&amp;amp;amp;gt; &amp;amp;amp;lt;key&amp;amp;amp;gt;Program&amp;amp;amp;lt;/key&amp;amp;amp;gt; &amp;amp;amp;lt;string&amp;amp;amp;gt;/Library/Scripts/fixUsersFolder.sh&amp;amp;amp;lt;/string&amp;amp;amp;gt; &amp;amp;amp;lt;key&amp;amp;amp;gt;RunAtLoad&amp;amp;amp;lt;/key&amp;amp;amp;gt; &amp;amp;amp;lt;true/&amp;amp;amp;gt; &amp;amp;amp;lt;/dict&amp;amp;amp;gt; &amp;amp;amp;lt;/plist&amp;amp;amp;gt; [/code] This should be saved to /Library/LaunchDaemons/com.sneakypockets.fixHidden.plist. Now when you boot your computer, launchd will run the script and put the Users directory and Shared directory back to there old style.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get the path of file onto the clipboard</title>
      <link>http://localhost:1313/posts/get-the-path-of-file-onto-the-clipboard-comments/</link>
      <pubDate>Wed, 06 Nov 2013 03:37:51 +0000</pubDate>
      <guid>http://localhost:1313/posts/get-the-path-of-file-onto-the-clipboard-comments/</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.sutocom.net&#34; title=&#34;dennes777@gmail.com&#34;&gt;SutoCom&lt;/a&gt; - &lt;!-- raw HTML omitted --&gt;Nov 4, 2013&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;Reblogged this on &lt;a href=&#34;http://sutocom.net/2013/11/07/get-the-path-of-file-onto-the-clipboard/&#34;&gt;Sutoprise Avenue, A SutoCom Source&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>Get the path of file onto the clipboard</title>
      <link>http://localhost:1313/posts/get-the-path-of-file-onto-the-clipboard/</link>
      <pubDate>Wed, 06 Nov 2013 03:37:51 +0000</pubDate>
      <guid>http://localhost:1313/posts/get-the-path-of-file-onto-the-clipboard/</guid>
      <description>&lt;p&gt;I find myself needing the path to a file relatively frequently to add to an email or documentation.  I added a service to the Finder contextual menu to get the path to the selected item.  This service notifies me with an alert (just for fun) and can be invoked with a keyboard shortcut.  This was done in Mavericks (10.9).  Most of it should work in 10.8 or 10.7 (except the notification). To start, open Automator (/Applications/Automator.app) and choose to make a New Document. When prompted, select to create a Service and click Choose. &lt;a href=&#34;http://sneakypockets.wordpress.com/wp-content/uploads/2013/11/screen-shot-2013-11-05-at-9-12-00-pm.png&#34;&gt;&lt;img src=&#34;http://sneakypockets.wordpress.com/wp-content/uploads/2013/11/screen-shot-2013-11-05-at-9-12-00-pm.png?w=300&#34; alt=&#34;Screen Shot 2013-11-05 at 9.12.00 PM&#34;&gt;&lt;/a&gt; This will create a new workflow that takes the selected items as input.  Change the &amp;ldquo;Service receives selected&amp;rdquo; menu to say &amp;ldquo;Files or Folders&amp;rdquo; and change &amp;ldquo;any application&amp;rdquo; to be &amp;ldquo;Finder&amp;rdquo;. Then we need to add the appropriate actions. First we need to get the actual path to the selected item. There isn&amp;rsquo;t an action to do this exactly, so add the Run AppleScript action.  Replace &amp;ldquo;(* Your script goes here *)&amp;rdquo; with:```&#xA;&lt;strong&gt;tell&lt;/strong&gt; &lt;em&gt;application&lt;/em&gt; &amp;ldquo;Finder&amp;rdquo;&#xA;&lt;strong&gt;return&lt;/strong&gt; POSIX path &lt;strong&gt;of&lt;/strong&gt; input&#xA;&lt;strong&gt;end&lt;/strong&gt; &lt;strong&gt;tell&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
