<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sierra on My Thoughts</title>
    <link>http://localhost:1313/tags/sierra/</link>
    <description>Recent content in Sierra on My Thoughts</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Eric Hemmeter</copyright>
    <lastBuildDate>Fri, 02 Feb 2018 20:28:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/sierra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting the Screen Saver to a static image</title>
      <link>http://localhost:1313/posts/setting-the-screen-saver-to-a-static-image/</link>
      <pubDate>Fri, 02 Feb 2018 20:28:49 +0000</pubDate>
      <guid>http://localhost:1313/posts/setting-the-screen-saver-to-a-static-image/</guid>
      <description>&lt;p&gt;On our Windows systems we have a static image as our screen saver and I wanted to match that on our Macs.  There are several options in the Screen Saver settings of System Preferences.  I needed to figure out how to set a default across all our Macs with a script.&lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2018/02/screen-shot-2018-02-02-at-1-55-51-pm.png&#34; alt=&#34;Screen Shot 2018-02-02 at 1.55.51 PM.png&#34;&gt;  We wanted a single image statically on the screen.  By making a folder with one image in it, we can use the slideshow options to show our single image. After setting things up the way I wanted, I looked around to see where the settings were stored.  You can use something like &lt;a href=&#34;https://fsmonitor.com&#34;&gt;FSMonitor&lt;/a&gt; to watch what files are edited when you change things in System Preferences.  These settings are per user and per device, so they end up in ~/Library/ByHost/com.apple.screensaver.plist, ~/Library/ByHost/com.apple.ScreenSaver.iLifeSlideShows.plist, and ~/Library/ByHost/com.apple.ScreenSaverPhotoChooser.plist.  If you select other options, you might not need all of these files. To work with this files, use &lt;code&gt;defaults -currentHost read [preference-domain]&lt;/code&gt;. First look at com.apple.screensaver.plist:&lt;code&gt;$ defaults -currentHost read com.apple.screensaver { PrefsVersion = 100; idleTime = 1800; moduleDict =     { moduleName = iLifeSlideshows; path = &amp;quot;/System/Library/Frameworks/ScreenSaver.framework/Resources/iLifeSlideshows.saver&amp;quot;; type = 0; }; }&lt;/code&gt;Then ~/Library/ByHost/com.apple.ScreenSaver.iLifeSlideShows.plist:&lt;code&gt;defaults -currentHost read com.apple.ScreenSaver.iLifeSlideShows { styleKey = Classic; }&lt;/code&gt;Then finally, ~/Library/ByHost/com.apple.ScreenSaverPhotoChooser.plist:&lt;code&gt;defaults -currentHost read com.apple.ScreenSaverPhotoChooser { CustomFolderDict =     { identifier = &amp;quot;/Library/Screen Savers/CompanyName&amp;quot;; name = CompanyName; }; LastViewedPhotoPath = &amp;quot;&amp;quot;; SelectedFolderPath = &amp;quot;/Library/Screen Savers/CompanyName&amp;quot;; SelectedSource = 4; }&lt;/code&gt;To set these, we use a very similar command: &lt;code&gt;defaults -currentHost write [preference-domain] [key] [value]&lt;/code&gt;. After some testing I&amp;rsquo;ve found we just need:```&#xA;#!/bin/sh&#xA;defaults -currentHost write com.apple.screensaver moduleDict -dict moduleName iLifeSlideshows path &amp;ldquo;/System/Library/Frameworks/ScreenSaver.framework/Resources/iLifeSlideshows.saver&amp;rdquo; type 0&#xA;defaults -currentHost write com.apple.ScreenSaver.iLifeSlideShows styleKey Classic&#xA;defaults -currentHost write com.apple.ScreenSaverPhotoChooser SelectedFolderPath &amp;ldquo;/Library/Screen Savers/CompanyName&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>macOS Sierra Recovery HD Changes</title>
      <link>http://localhost:1313/posts/macos-sierra-recovery-hd-changes-comments/</link>
      <pubDate>Wed, 21 Sep 2016 20:41:40 +0000</pubDate>
      <guid>http://localhost:1313/posts/macos-sierra-recovery-hd-changes-comments/</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ExtremeLanding.com/&#34; title=&#34;ExtremeLanding.com@gmail.com&#34;&gt;Extreme Landing&lt;/a&gt; - &lt;!-- raw HTML omitted --&gt;Jan 2, 2017&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;I accidentally changed the ACLs permissions on my home folder and had the same problem on my MacBook Pro running macOS Sierra version 10.12.2 Follow the step below to changed the folders No Access permissions and revert back to Allow access: Restart with the Command and S keys held down, and run the following commands: mount -uw / chown root / chmod 1775 / exit &amp;ndash; After the last command &amp;ldquo;exit&amp;rdquo; your system should restart on its own and everything should appear the same as the time before you changed the Home folder permissions. I hope this helps, Extreme Landing &lt;a href=&#34;https://ExtremeLanding.com/&#34;&gt;https://ExtremeLanding.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>macOS Sierra Recovery HD Changes</title>
      <link>http://localhost:1313/posts/macos-sierra-recovery-hd-changes/</link>
      <pubDate>Wed, 21 Sep 2016 20:41:40 +0000</pubDate>
      <guid>http://localhost:1313/posts/macos-sierra-recovery-hd-changes/</guid>
      <description>&lt;p&gt;[Update 7/20/17] As of 10.12.6 RepairHomePermissions still fails with error: Unable to launch the underlying task process.  Also my bug report has been marked as a  DUPLICATE OF 25393689. [Update 1/26/17] As of 10.12.3 RepairHomePermissions still fails with error: Unable to launch the underlying task process. One of the areas that hasn&amp;rsquo;t gotten much coverage with the update to Sierra is the Recovery HD. This is the minimal OS environment that lets us do things like reinstall the OS, restore a Time Machine backup, and partition volumes before an install. The other thing that Recovery allows us to do is to reset forgotten passwords. Originally, we could do this by booting off the install CD/DVD. Once those went away Recovery HD gave us a Reset Password option in the Utilities menu. That went away in Yosemite(?) but we could get the same functionality by choosing Utilities -&amp;gt; Terminal and running the resetpassword command. This reset password utility would also allow us to reset a users home folder permissions, including the default ACLs. Now with macOS Sierra v10.12, this has changed again. To start, boot to Recovery by holding down Command-R at startup.  You will end up at a screen like: &lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-10-31-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.10.31 PM.png&#34;&gt; Then open the Utilities menu and choose Terminal:&lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-10-55-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.10.55 PM.png&#34;&gt; In the Terminal window that open, run the resetpassword command to bring up a new assistant.&lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-11-11-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.11.11 PM.png&#34;&gt; Select the user you need to reset the password of and click Next. &lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-11-28-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.11.28 PM.png&#34;&gt; Then you can enter the new password and confirm it.  Add a hint if you want and click Next.&lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-11-42-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.11.42 PM.png&#34;&gt; Finally you get confirmation of the change and can reboot.  Or if you open the Reset Password menu, you can quit to easily return to the Terminal.&lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-11-57-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.11.57 PM.png&#34;&gt; The piece that is missing from all that is reseting home folder permissions.  It turns out there is a new tool to (try to) do this.  Back in your terminal, enter the command RepairHomePermissions and hit Enter.&lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-12-28-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.12.28 PM.png&#34;&gt; Again an assistant opens and we can select the user whose home folder permissions we need to reset.  Click Next.&lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-12-36-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.12.36 PM.png&#34;&gt; Unfortunately, at this time (Sierra v10.12 build 16A323) the process fails.&lt;img src=&#34;https://sneakypockets.wordpress.com/wp-content/uploads/2016/09/screen-shot-2016-09-21-at-3-12-41-pm.png&#34; alt=&#34;Screen Shot 2016-09-21 at 3.12.41 PM.png&#34;&gt; Again, you can reboot or Quit the RepairHomePermissions assistant (interestingly called ResetPassword in the menu bar). Note that RepairHomePermissions is available in a full Sierra install, but fails even sooner when run as it tries to reference /System/Installation/CDIS/KeyRecoveryAssistant.app/Contents/MacOS/KeyRecoveryAssistant, which doesn&amp;rsquo;t exist on a standard install. Also both of these assistants will have you unlock a FileVaulted drive before asking you which user to work with. Thanks to MacAdmin Slack members mikethefifth, for asking about reseting home folder permissions which prompted these tests, and owen.pragel, for sharing the new command list that included the tantalizing RepairHomePermissions and for finding the reference to KeyRecoveryAssistant. Update: I have filed a bug about RepairHomePermissions not working. https://openradar.appspot.com/28431470&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
